<?php

namespace Modules\Train\Models;

use App\BaseModel;
use Database\Factories\TrainSeatFactory;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\SoftDeletes;
use Modules\Flight\Factories\FlightSeatFactory;
use Modules\Flight\Models\Flight;
use Modules\Flight\Models\SeatType;
use Modules\Train\Models\TrainModel;

class TrainSeat extends BaseModel
{
    use SoftDeletes;
    use HasFactory;

    protected $table = 'bravo_train_seat';
    protected $fillable=['seat_type','train_id','price','max_passengers','person','baggage_check_in','baggage_cabin'];

    public function train()
    {
        return $this->belongsTo(TrainModel::class,'train_id')->withDefault();
    }
    public function seatType(){
        return $this->belongsTo(SeatType::class,'seat_type','code')->withDefault();
    }

    protected static function newFactory()
    {
        return TrainSeatFactory::new();
    }
    public function save(array $options = [])
    {
        $save =  parent::save($options); // TODO: Change the autogenerated stub
        if($save){
            $min_price = self::where('train_id',$this->train_id)->get()->min('price');
            $train= $this->train;
            if($min_price < $train->min_price or empty($train->min_price)){
                $train->min_price = $min_price;
                $train->save();
            }
        }
        return $save;
    }

}
